{"version":3,"sources":["gatlingBackgroundTransparente.png","Collapsible.js","CollapsibleCenarios.js","App.js","index.js"],"names":["Collapsible","props","useState","isOpen","setIsOpen","classname","type","className","onClick","api","redis","db","children","CollapsibleCenarios","description","App","link","setLink","showResults","setShowResult","buttonSelected","setButtonSelected","handleLink","params","class","src","width","height","gatlingLogo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f6e7102.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gatlingBackgroundTransparente.99e6d778.png\";","import React, { useState } from \"react\";\r\nimport btnExpandir from './hardware2bar.png';\r\nimport gatlingLogo from './gatlingBackgroundTransparente.png';\r\nimport './App.css';\r\n\r\nfunction Collapsible(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return <div classname=\"collapsible\">\r\n        <button type=\"submit\" className=\"btnExpandFormat\" onClick={() => setIsOpen(!isOpen)}>\r\n            <div>\r\n                <br />\r\n                <strong>HARDWARE:</strong>\r\n                <br /><strong>API:</strong> {props.api} <br />\r\n                <strong>REDIS T3.MICRO:</strong> {props.redis} <br />\r\n                <strong>BANCO DE DADOS:</strong> {props.db} <br />\r\n            </div>\r\n        </button>\r\n        \r\n        <div className={isOpen ? 'open' : 'content'}>{props.children}</div>\r\n        \r\n    </div>\r\n}\r\n\r\nexport default Collapsible;\r\n","import React, { useState } from \"react\";\r\nimport './App.css';\r\n\r\nfunction CollapsibleCenarios(props) {\r\n    const [isOpen, setIsOpen] = useState(true);\r\n\r\n    return <div classname=\"collapsible\">\r\n        <button type=\"submit\" className=\"btnExpandFormatCenarios\" onClick={() => setIsOpen(!isOpen)}>\r\n            {props.description}\r\n        </button>\r\n        \r\n        <div className={isOpen ? 'openCenarios' : 'content'}>{props.children}</div>\r\n        \r\n    </div>\r\n}\r\n\r\nexport default CollapsibleCenarios;\r\n","import { useState } from 'react';\r\nimport './App.css';\r\nimport gatlingLogo from './gatlingBackgroundTransparente.png';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Collapsible from './Collapsible';\r\nimport CollapsibleCenarios from './CollapsibleCenarios';\r\n\r\nfunction App() {\r\n  const [link, setLink] = useState('https://vivinicius.github.io/performanceResults/users_200_9/index.html');\r\n  const [showResults, setShowResult] = useState(false);\r\n  const [buttonSelected, setButtonSelected] = useState('');\r\n\r\n  function handleLink(params) {\r\n    !showResults && setShowResult(true);\r\n    setLink(`https://vivinicius.github.io/performanceResults/${params}/index.html`);\r\n    setButtonSelected(params);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div class=\"tittle\">\r\n        <h1>RESULTADOS DOS TESTES DE PERFORMANCE MAXXIFORGE</h1>\r\n      </div>\r\n\r\n      <div class=\"container\">\r\n        <div class=\"allTest\">\r\n          <div class=\"test1\">\r\n            <div class=\"topbar\">\r\n              <br />\r\n            </div>\r\n            <Collapsible api=\"0,5x (CPU) 1GB(RAM)\" redis=\"0,5GB(RAM)\" db=\"2xCPU 2GB(RAM)\">\r\n              <ReactTooltip />\r\n              <CollapsibleCenarios description=\"CENÁRIO 1:\">\r\n              <div class=\"testDescription1\">\r\n                <br />Esse teste foi executado da forma que mantemos <strong>X usuarios</strong> <br />\r\n                conectados na aplicação <strong>durante 5 minutos</strong>, os usuarios ficaram <br />\r\n                realizando toda a jornada em looping durante todo o tempo de<br />\r\n                execução dos testes.<br /> <br />\r\n              </div>\r\n\r\n              <div class=\"links1\">\r\n                <button onClick={() => handleLink('10_usrs_5_min_11')} className={`linkButton ${buttonSelected === '10_usrs_5_min_11' && 'selected'}`}>10 Usuários</button>\r\n                <button onClick={() => handleLink('20_usrs_5_min_11')} className={`linkButton ${buttonSelected === '20_usrs_5_min_11' && 'selected'}`} >20 Usuários</button>\r\n                <button onClick={() => handleLink('30_usrs_5_min_11')} className={`linkButton ${buttonSelected === '30_usrs_5_min_11' && 'selected'}`} >30 Usuários</button>\r\n                <button onClick={() => handleLink('40_usrs_5_min_11')} data-tip=\"Quantidade de usuários recomendados para o Hardware\" className={`linkButtonRecomend ${buttonSelected === '40_usrs_5_min_11' && 'selectedHardware'}`} >40 Usuários</button>\r\n                <button onClick={() => handleLink('50_usrs_5_min_11')} className={`linkButton ${buttonSelected === '50_usrs_5_min_11' && 'selected'}`} >50 Usuários</button>\r\n                <button onClick={() => handleLink('100_usrs_5_min_11')} className={`linkButton ${buttonSelected === '100_usrs_5_min_11' && 'selected'}`}>100 Usuários</button>\r\n              </div>\r\n              </CollapsibleCenarios>\r\n              <CollapsibleCenarios description=\"CENÁRIO 2:\">\r\n              <div class=\"testDescription2\">\r\n                <br />Esse teste foi executado da forma que subimos <strong>X usuarios de uma</strong><br />\r\n                <strong>só vez</strong> na aplicação, a jornada toda é executada apenas uma vez.<br /> <br />\r\n              </div>\r\n              <div class=\"links2\">\r\n                <button onClick={() => handleLink('10_users_1x_11')} className={`linkButton ${buttonSelected === '10_users_1x_11' && 'selected'}`}>10 Usuários</button>\r\n                <button onClick={() => handleLink('20_users_1x_11')} className={`linkButton ${buttonSelected === '20_users_1x_11' && 'selected'}`}>20 Usuários</button>\r\n                <button onClick={() => handleLink('40_users_1x_11')} className={`linkButton ${buttonSelected === '40_users_1x_11' && 'selected'}`}>40 Usuários</button>\r\n                <button onClick={() => handleLink('60_users_1x_11')} className={`linkButton ${buttonSelected === '60_users_1x_11' && 'selected'}`}>60 Usuários</button>\r\n                <button onClick={() => handleLink('80_users_1x_11')} className={`linkButton ${buttonSelected === '80_users_1x_11' && 'selected'}`}>80 Usuários</button>\r\n                <button onClick={() => handleLink('100_users_1x_11')} className={`linkButton ${buttonSelected === '100_users_1x_11' && 'selected'}`}>100 Usuários</button>\r\n              </div>\r\n              </CollapsibleCenarios>\r\n              <CollapsibleCenarios description=\"CENÁRIO 3:\">\r\n              <div class=\"testDescription1\">\r\n                <br />Esses testes foram executados da <strong>mesma forma que o cenário 1</strong>, <br />\r\n                porém, utilizando uma maquina virtual <strong>na AWS para desconsiderar-</strong><br />\r\n                <strong>mos o fator latencia</strong> dos testes.<br /><br />\r\n              </div>\r\n              <div class=\"links1\">\r\n                <button onClick={() => handleLink('10_usrs_5_min_11_aws')} className={`linkButton ${buttonSelected === '10_usrs_5_min_11_aws' && 'selected'}`}>10 Usuários</button>\r\n                <button onClick={() => handleLink('20_usrs_5_min_11_aws')} className={`linkButton ${buttonSelected === '20_usrs_5_min_11_aws' && 'selected'}`}>20 Usuários</button>\r\n                <button onClick={() => handleLink('30_usrs_5_min_11_aws')} className={`linkButton ${buttonSelected === '30_usrs_5_min_11_aws' && 'selected'}`}>30 Usuários</button>\r\n                <button onClick={() => handleLink('40_usrs_5_min_11_aws')} className={`linkButton ${buttonSelected === '40_usrs_5_min_11_aws' && 'selected'}`}>40 Usuários</button>\r\n                <button onClick={() => handleLink('50_usrs_5_min_11_aws')} className={`linkButton ${buttonSelected === '50_usrs_5_min_11_aws' && 'selected'}`}>50 Usuários</button>\r\n                <button onClick={() => handleLink('100_usrs_5_min_11_aws')} className={`linkButton ${buttonSelected === '100_usrs_5_min_11_aws' && 'selected'}`}>100 Usuários</button>\r\n              </div>\r\n              </CollapsibleCenarios>\r\n              <CollapsibleCenarios description=\"CENÁRIO 4:\">\r\n              <div class=\"testDescription2\">\r\n                <br />Esses testes foram executados da <strong>mesma forma que o cenário 2</strong>, <br />\r\n                porém, utilizando uma maquina virtual <strong>na AWS para desconsiderar-</strong><br />\r\n                <strong>mos o fator latencia</strong> dos testes.<br /><br />\r\n              </div>\r\n\r\n              <div class=\"links2\">\r\n                <button onClick={() => handleLink('10_users_1x_11_aws')} className={`linkButton ${buttonSelected === '10_users_1x_11_aws' && 'selected'}`}>10 Usuários</button>\r\n                <button onClick={() => handleLink('20_users_1x_11_aws')} className={`linkButton ${buttonSelected === '20_users_1x_11_aws' && 'selected'}`}>20 Usuários</button>\r\n                <button onClick={() => handleLink('40_users_1x_11_aws')} className={`linkButton ${buttonSelected === '40_users_1x_11_aws' && 'selected'}`}>40 Usuários</button>\r\n                <button onClick={() => handleLink('60_users_1x_11_aws')} className={`linkButton ${buttonSelected === '60_users_1x_11_aws' && 'selected'}`}>60 Usuários</button>\r\n                <button onClick={() => handleLink('80_users_1x_11_aws')} className={`linkButton ${buttonSelected === '80_users_1x_11_aws' && 'selected'}`}>80 Usuários</button>\r\n                <button onClick={() => handleLink('100_users_1x_11_aws')} className={`linkButton ${buttonSelected === '100_users_1x_11_aws' && 'selected'}`}>100 Usuários</button>\r\n              </div>\r\n              </CollapsibleCenarios>\r\n            </Collapsible>\r\n          </div>\r\n          <br />\r\n          <div class=\"test2\">\r\n            <div class=\"topbar\">\r\n              <br />\r\n            </div>\r\n            <Collapsible api=\"1x (CPU) 2GB(RAM)\" redis=\"0,5GB(RAM)\" db=\"2xCPU 4GB(RAM)\">\r\n              <ReactTooltip />\r\n              <div class=\"testTittle1\">\r\n                <strong>CENARIO 1:</strong>\r\n              </div>\r\n              <div class=\"testDescription1\">\r\n                <br />Esse teste foi executado da forma que mantemos <strong>X usuarios</strong> <br />\r\n                conectados na aplicação <strong>durante 5 minutos</strong>, os usuarios ficaram <br />\r\n                realizando toda a jornada em looping durante todo o tempo de<br />\r\n                execução dos testes.<br /> <br />\r\n              </div>\r\n\r\n              <div class=\"links1\">\r\n                <button onClick={() => handleLink('30_usrs_5_min_12')} className={`linkButton ${buttonSelected === '30_usrs_5_min_12' && 'selected'}`}>30 Usuários</button>\r\n                <button onClick={() => handleLink('40_usrs_5_min_12')} className={`linkButton ${buttonSelected === '40_usrs_5_min_12' && 'selected'}`}>40 Usuários</button>\r\n                <button onClick={() => handleLink('50_usrs_5_min_12')} className={`linkButton ${buttonSelected === '50_usrs_5_min_12' && 'selected'}`}>50 Usuários</button>\r\n                <button onClick={() => handleLink('60_usrs_5_min_12')} data-tip=\"Quantidade de usuários recomendados para o Hardware\" className={`linkButtonRecomend ${buttonSelected === '60_usrs_5_min_12' && 'selectedHardware'}`} >60 Usuários</button>\r\n                <button onClick={() => handleLink('70_usrs_5_min_12')} className={`linkButton ${buttonSelected === '70_usrs_5_min_12' && 'selected'}`}>70 Usuários</button>\r\n                <button onClick={() => handleLink('100_usrs_5_min_12')} className={`linkButton ${buttonSelected === '100_usrs_5_min_12' && 'selected'}`}>100 Usuários</button>\r\n              </div>\r\n\r\n              <div class=\"testTittle2\">\r\n                <strong>CENARIO 2:</strong>\r\n              </div>\r\n              <div class=\"testDescription2\">\r\n                <br />Esse teste foi executado da forma que subimos <strong>X usuarios de uma</strong><br />\r\n                <strong>só vez</strong> na aplicação, a jornada toda é executada apenas uma vez.<br /> <br />\r\n              </div>\r\n\r\n              <div class=\"links2\">\r\n                <button onClick={() => handleLink('30_users_1x_12')} className={`linkButton ${buttonSelected === '30_users_1x_12' && 'selected'}`}>30 Usuários</button>\r\n                <button onClick={() => handleLink('50_users_1x_12')} className={`linkButton ${buttonSelected === '50_users_1x_12' && 'selected'}`}>50 Usuários</button>\r\n                <button onClick={() => handleLink('70_users_1x_12')} className={`linkButton ${buttonSelected === '70_users_1x_12' && 'selected'}`}>70 Usuários</button>\r\n                <button onClick={() => handleLink('90_users_1x_12')} className={`linkButton ${buttonSelected === '90_users_1x_12' && 'selected'}`}>90 Usuários</button>\r\n                <button onClick={() => handleLink('110_users_1x_12')} className={`linkButton ${buttonSelected === '110_users_1x_12' && 'selected'}`}>110 Usuários</button>\r\n                <button onClick={() => handleLink('130_users_1x_12')} className={`linkButton ${buttonSelected === '130_users_1x_12' && 'selected'}`}>130 Usuários</button>\r\n              </div>\r\n            </Collapsible>\r\n          </div>\r\n        </div>\r\n        {showResults ? (\r\n          <div class=\"linkGatling\">\r\n            <iframe src={link} width=\"40%\" height=\"500px\" />\r\n          </div>\r\n        ) : (\r\n          <div class=\"gatlingBackgroundImage\">\r\n            <img src={gatlingLogo} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}