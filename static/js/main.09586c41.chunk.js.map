{"version":3,"sources":["gatlingBackground2.png","App.js","index.js"],"names":["App","useState","link","setLink","showResults","setShowResult","handleLink","params","class","onClick","className","src","width","height","gatlingLogo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09586c41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gatlingBackground2.9dfdf01a.png\";","import { useState } from 'react';\r\nimport './App.css';\r\nimport gatlingLogo from './gatlingBackground2.png';\r\n\r\nfunction App() {\r\n  const [link, setLink] = useState('https://vivinicius.github.io/performanceResults/users_200_9/index.html');\r\n  const [showResults, setShowResult] = useState(false);\r\n\r\n  function handleLink(params) {\r\n    !showResults && setShowResult(true);\r\n    setLink(`https://vivinicius.github.io/performanceResults/${params}/index.html`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div class=\"tittle\">\r\n      <h1>RESULTADOS DOS TESTES DE PERFORMANCE MAXXIFORGE</h1>\r\n    </div>\r\n\r\n    <div class=\"container\"> \r\n<div class=\"allTest\"> \r\n<div class=\"test1\">\r\n  <div class=\"hardware1\">\r\n      <strong>HARDWARE 1:</strong><br /><br />\r\n      API- 0,5x (CPU) 1GB(RAM) <br />\r\n      REDIS T3.MICRO - 0,5GB(RAM) <br />\r\n      BANCO DE DADOS- 2xCPU 2GB(RAM) <br />\r\n    <div class=\"testTittle1\">\r\n      <strong>Teste 1:</strong>\r\n    </div>\r\n    <div class=\"testDescription1\">\r\n      <br />Esse teste foi executado da forma que mantemos X usuarios<br />\r\n      conectados na aplicação durante 5 minutos, os usuarios ficaram <br />\r\n      realizando toda a jornada em looping durante todo o tempo de<br />\r\n      execução dos testes.<br /> <br />\r\n    </div>\r\n  </div>\r\n  <div class=\"links1\">\r\n  <button onClick={() => handleLink('10_usrs_5_min_11')} className=\"linkButton\">10 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">20 Usuários</button>\r\n  <button onClick={() => handleLink('30_usrs_5_min_11')} className=\"linkButton\">30 Usuários</button>\r\n  <button onClick={() => handleLink('40_usrs_5_min_11')} className=\"linkButton\">40 Usuários</button>\r\n  <button onClick={() => handleLink('50_usrs_5_min_11')} className=\"linkButton\">50 Usuários</button>\r\n  <button onClick={() => handleLink('100_usrs_5_min_11')} className=\"linkButton\">100 Usuários</button>\r\n  </div>\r\n  <div class=\"testTittle2\">\r\n    <strong>Teste 2:</strong>\r\n  </div>\r\n  <div class=\"testDescription2\">\r\n    <br />Esse teste foi executado da forma que subimos X usuarios de uma<br />\r\n    só vez na aplicação, a jornada toda é executada apenas uma vez.<br /> <br />\r\n  </div>\r\n\r\n  <div class=\"links2\">\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">10 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">20 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">40 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">60 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">80 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">100 Usuários</button>\r\n  </div>\r\n</div>\r\n<br />\r\n<div class=\"test2\">\r\n  <div class=\"hardware1\">\r\n      <strong>HARDWARE 2:</strong><br /><br />\r\n      API- 1x (CPU) 2GB(RAM) <br />\r\n      REDIS T3.MICRO - 0,5GB(RAM) <br />\r\n      BANCO DE DADOS- 2xCPU 4GB(RAM) <br />\r\n    <div class=\"testTittle1\">\r\n      <strong>Teste 1:</strong>\r\n    </div>\r\n    <div class=\"testDescription1\">\r\n      <br />Esse teste foi executado da forma que mantemos X usuarios<br />\r\n      conectados na aplicação durante 5 minutos, os usuarios ficaram <br />\r\n      realizando toda a jornada em looping durante todo o tempo de<br />\r\n      execução dos testes.<br /> <br />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"links1\">\r\n  <button onClick={() => handleLink('30_usrs_5_min_12')} className=\"linkButton\">30 Usuários</button>\r\n  <button onClick={() => handleLink('40_usrs_5_min_12')} className=\"linkButton\">40 Usuários</button>\r\n  <button onClick={() => handleLink('50_usrs_5_min_12')} className=\"linkButton\">50 Usuários</button>\r\n  <button onClick={() => handleLink('60_usrs_5_min_12')} className=\"linkButton\">60 Usuários</button>\r\n  <button onClick={() => handleLink('70_usrs_5_min_12')} className=\"linkButton\">70 Usuários</button>\r\n  <button onClick={() => handleLink('100_usrs_5_min_12')} className=\"linkButton\">100 Usuários</button>\r\n  </div>\r\n\r\n  <div class=\"testTittle2\">\r\n    <strong>Teste 2:</strong>\r\n  </div>\r\n  <div class=\"testDescription2\">\r\n    <br />Esse teste foi executado da forma que subimos X usuarios de uma<br />\r\n    só vez na aplicação, a jornada toda é executada apenas uma vez.<br /> <br />\r\n  </div>\r\n\r\n  <div class=\"links2\">\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">10 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">20 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">30 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">40 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">50 Usuários</button>\r\n  <button onClick={() => handleLink('20_usrs_5_min_11')} className=\"linkButton\">100 Usuários</button>\r\n  </div>\r\n  </div>\r\n</div>   \r\n{showResults ? (\r\n  <div class=\"linkGatling\">\r\n    <iframe src={link} width=\"40%\" height=\"500px\" />\r\n  </div>\r\n) : (\r\n  <div class=\"linkGatling2\">\r\n   <img src={gatlingLogo} />\r\n  </div>\r\n)}\r\n</div>\r\n</>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}